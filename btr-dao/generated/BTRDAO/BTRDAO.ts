// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AcceptOrDenyProposal extends ethereum.Event {
  get params(): AcceptOrDenyProposal__Params {
    return new AcceptOrDenyProposal__Params(this);
  }
}

export class AcceptOrDenyProposal__Params {
  _event: AcceptOrDenyProposal;

  constructor(event: AcceptOrDenyProposal) {
    this._event = event;
  }

  get title(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposal(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get proposalOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get proposalValidationTime(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get proposalAccepted(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get title(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposal(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get proposalOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get title(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposal(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get proposalOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProposalVoted extends ethereum.Event {
  get params(): ProposalVoted__Params {
    return new ProposalVoted__Params(this);
  }
}

export class ProposalVoted__Params {
  _event: ProposalVoted;

  constructor(event: ProposalVoted) {
    this._event = event;
  }

  get title(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposal(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get proposalOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vote(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get voter(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class BTRDAO__btrProposalsResult {
  value0: Bytes;
  value1: Bytes;
  value2: Address;
  value3: boolean;
  value4: boolean;
  value5: boolean;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;

  constructor(
    value0: Bytes,
    value1: Bytes,
    value2: Address,
    value3: boolean,
    value4: boolean,
    value5: boolean,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBytes(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    return map;
  }

  getTitle(): Bytes {
    return this.value0;
  }

  getProposal(): Bytes {
    return this.value1;
  }

  getProposalOwner(): Address {
    return this.value2;
  }

  getProposalAccepted(): boolean {
    return this.value3;
  }

  getProposalAlreadyValidated(): boolean {
    return this.value4;
  }

  getProposalExecuted(): boolean {
    return this.value5;
  }

  getVotedYes(): BigInt {
    return this.value6;
  }

  getVotedNo(): BigInt {
    return this.value7;
  }

  getTotalVotes(): BigInt {
    return this.value8;
  }

  getProposalDeadline(): BigInt {
    return this.value9;
  }
}

export class BTRDAO__canCreateAnotherProposalResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class BTRDAO__viewACreatedProposalResult {
  value0: string;
  value1: Address;
  value2: boolean;
  value3: boolean;
  value4: boolean;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;

  constructor(
    value0: string,
    value1: Address,
    value2: boolean,
    value3: boolean,
    value4: boolean,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }

  getProposal(): string {
    return this.value0;
  }

  getProposalOwner(): Address {
    return this.value1;
  }

  getProposalAccepted(): boolean {
    return this.value2;
  }

  getProposalAlreadyValidated(): boolean {
    return this.value3;
  }

  getProposalExecuted(): boolean {
    return this.value4;
  }

  getVotedYes(): BigInt {
    return this.value5;
  }

  getVotedNo(): BigInt {
    return this.value6;
  }

  getTotalVotes(): BigInt {
    return this.value7;
  }

  getProposalDeadline(): BigInt {
    return this.value8;
  }
}

export class BTRDAO extends ethereum.SmartContract {
  static bind(address: Address): BTRDAO {
    return new BTRDAO("BTRDAO", address);
  }

  bTRNFTAddress(): Address {
    let result = super.call("bTRNFTAddress", "bTRNFTAddress():(address)", []);

    return result[0].toAddress();
  }

  try_bTRNFTAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bTRNFTAddress",
      "bTRNFTAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  btrProposals(param0: BigInt): BTRDAO__btrProposalsResult {
    let result = super.call(
      "btrProposals",
      "btrProposals(uint256):(bytes,bytes,address,bool,bool,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new BTRDAO__btrProposalsResult(
      result[0].toBytes(),
      result[1].toBytes(),
      result[2].toAddress(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
    );
  }

  try_btrProposals(
    param0: BigInt,
  ): ethereum.CallResult<BTRDAO__btrProposalsResult> {
    let result = super.tryCall(
      "btrProposals",
      "btrProposals(uint256):(bytes,bytes,address,bool,bool,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BTRDAO__btrProposalsResult(
        value[0].toBytes(),
        value[1].toBytes(),
        value[2].toAddress(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
      ),
    );
  }

  canCreateAnotherProposal(): BTRDAO__canCreateAnotherProposalResult {
    let result = super.call(
      "canCreateAnotherProposal",
      "canCreateAnotherProposal():(bool,uint256)",
      [],
    );

    return new BTRDAO__canCreateAnotherProposalResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
    );
  }

  try_canCreateAnotherProposal(): ethereum.CallResult<BTRDAO__canCreateAnotherProposalResult> {
    let result = super.tryCall(
      "canCreateAnotherProposal",
      "canCreateAnotherProposal():(bool,uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BTRDAO__canCreateAnotherProposalResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
      ),
    );
  }

  currentIndex(): BigInt {
    let result = super.call("currentIndex", "currentIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentIndex", "currentIndex():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  haveYouVotedThisProposal(index: BigInt): boolean {
    let result = super.call(
      "haveYouVotedThisProposal",
      "haveYouVotedThisProposal(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return result[0].toBoolean();
  }

  try_haveYouVotedThisProposal(index: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "haveYouVotedThisProposal",
      "haveYouVotedThisProposal(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  secondOwner(): Address {
    let result = super.call("secondOwner", "secondOwner():(address)", []);

    return result[0].toAddress();
  }

  try_secondOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("secondOwner", "secondOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  viewACreatedProposal(index: BigInt): BTRDAO__viewACreatedProposalResult {
    let result = super.call(
      "viewACreatedProposal",
      "viewACreatedProposal(uint256):(string,address,bool,bool,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return new BTRDAO__viewACreatedProposalResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
    );
  }

  try_viewACreatedProposal(
    index: BigInt,
  ): ethereum.CallResult<BTRDAO__viewACreatedProposalResult> {
    let result = super.tryCall(
      "viewACreatedProposal",
      "viewACreatedProposal(uint256):(string,address,bool,bool,bool,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BTRDAO__viewACreatedProposalResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _btrNFTAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AcceptOrDenyProposalCall extends ethereum.Call {
  get inputs(): AcceptOrDenyProposalCall__Inputs {
    return new AcceptOrDenyProposalCall__Inputs(this);
  }

  get outputs(): AcceptOrDenyProposalCall__Outputs {
    return new AcceptOrDenyProposalCall__Outputs(this);
  }
}

export class AcceptOrDenyProposalCall__Inputs {
  _call: AcceptOrDenyProposalCall;

  constructor(call: AcceptOrDenyProposalCall) {
    this._call = call;
  }

  get _acceptProposal(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AcceptOrDenyProposalCall__Outputs {
  _call: AcceptOrDenyProposalCall;

  constructor(call: AcceptOrDenyProposalCall) {
    this._call = call;
  }
}

export class AddSecondDAOOwnerCall extends ethereum.Call {
  get inputs(): AddSecondDAOOwnerCall__Inputs {
    return new AddSecondDAOOwnerCall__Inputs(this);
  }

  get outputs(): AddSecondDAOOwnerCall__Outputs {
    return new AddSecondDAOOwnerCall__Outputs(this);
  }
}

export class AddSecondDAOOwnerCall__Inputs {
  _call: AddSecondDAOOwnerCall;

  constructor(call: AddSecondDAOOwnerCall) {
    this._call = call;
  }

  get _secondOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddSecondDAOOwnerCall__Outputs {
  _call: AddSecondDAOOwnerCall;

  constructor(call: AddSecondDAOOwnerCall) {
    this._call = call;
  }
}

export class CreateProposalCall extends ethereum.Call {
  get inputs(): CreateProposalCall__Inputs {
    return new CreateProposalCall__Inputs(this);
  }

  get outputs(): CreateProposalCall__Outputs {
    return new CreateProposalCall__Outputs(this);
  }
}

export class CreateProposalCall__Inputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _proposal(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateProposalCall__Outputs {
  _call: CreateProposalCall;

  constructor(call: CreateProposalCall) {
    this._call = call;
  }
}

export class ExecuteProposalCall extends ethereum.Call {
  get inputs(): ExecuteProposalCall__Inputs {
    return new ExecuteProposalCall__Inputs(this);
  }

  get outputs(): ExecuteProposalCall__Outputs {
    return new ExecuteProposalCall__Outputs(this);
  }
}

export class ExecuteProposalCall__Inputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteProposalCall__Outputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VoteOnProposalCall extends ethereum.Call {
  get inputs(): VoteOnProposalCall__Inputs {
    return new VoteOnProposalCall__Inputs(this);
  }

  get outputs(): VoteOnProposalCall__Outputs {
    return new VoteOnProposalCall__Outputs(this);
  }
}

export class VoteOnProposalCall__Inputs {
  _call: VoteOnProposalCall;

  constructor(call: VoteOnProposalCall) {
    this._call = call;
  }

  get vote(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class VoteOnProposalCall__Outputs {
  _call: VoteOnProposalCall;

  constructor(call: VoteOnProposalCall) {
    this._call = call;
  }
}

export class WithdrawAnyFundsCall extends ethereum.Call {
  get inputs(): WithdrawAnyFundsCall__Inputs {
    return new WithdrawAnyFundsCall__Inputs(this);
  }

  get outputs(): WithdrawAnyFundsCall__Outputs {
    return new WithdrawAnyFundsCall__Outputs(this);
  }
}

export class WithdrawAnyFundsCall__Inputs {
  _call: WithdrawAnyFundsCall;

  constructor(call: WithdrawAnyFundsCall) {
    this._call = call;
  }
}

export class WithdrawAnyFundsCall__Outputs {
  _call: WithdrawAnyFundsCall;

  constructor(call: WithdrawAnyFundsCall) {
    this._call = call;
  }
}
